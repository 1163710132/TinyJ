//
// Created by chenjs on 2019/10/22.
//

#ifndef TINYJ_INSTRUCTION_H
#define TINYJ_INSTRUCTION_H

#include "Primitive.h"

namespace TinyJ{

enum class OpCode: U8{
    //CONSTANTS
    NOP = 0x00,
    A_CONST_NULL,
    I_CONST_M1,
    I_CONST_0 ,
    I_CONST_1,
    I_CONST_2,
    I_CONST_3,
    I_CONST_4,
    I_CONST_5,
    L_CONST_0,
    L_CONST_1,
    F_CONST_0,
    F_CONST_1,
    F_CONST_2,
    D_CONST_0,
    D_CONST_1,
    BI_PUSH, SI_PUSH, LDC, LDC_W, LDC2_W,

    //LOADS
    I_LOAD, L_LOAD, F_LOAD, D_LOAD, A_LOAD,
    I_LOAD_0, I_LOAD_1, I_LOAD_2, I_LOAD_3,
    L_LOAD_0, L_LOAD_1, L_LOAD_2, L_LOAD_3,
    F_LOAD_0, F_LOAD_1, F_LOAD_2, F_LOAD_3,
    D_LOAD_0, D_LOAD_1, D_LOAD_2, D_LOAD_3,
    A_LOAD_0, A_LOAD_1, A_LOAD_2, A_LOAD_3,
    I_A_LOAD, L_A_LOAD, F_A_LOAD, D_A_LOAD,
    A_A_LOAD, B_A_LOAD, C_A_LOAD, S_A_LOAD,

    //STORE
    I_STORE, L_STORE, F_STORE, D_STORE, A_STORE,
    I_STORE_0, I_STORE_1, I_STORE_2, I_STORE_3,
    L_STORE_0, L_STORE_1, L_STORE_2, L_STORE_3,
    F_STORE_0, F_STORE_1, F_STORE_2, F_STORE_3,
    D_STORE_0, D_STORE_1, D_STORE_2, D_STORE_3,
    A_STORE_0, A_STORE_1, A_STORE_2, A_STORE_3,
    I_A_STORE, L_A_STORE, F_A_STORE, D_A_STORE, A_A_STORE,
    B_A_STORE, C_A_STORE, S_A_STORE,

    //STACK
    POP, POP2, DUP, DUP_X1, DUP_X2, DUP2, DUP2_X1, DUP2_X2, SWAP,

    //MATH
    I_ADD, L_ADD, F_ADD, D_ADD,
    I_SUB, L_SUB, F_SUB, D_SUB,
    I_MUL, L_MUL, F_MUL, D_MUL,
    I_DIV, L_DIV, F_DIV, D_DIV,
    I_REM, L_REM, F_REM, D_REM,
    I_NEG, L_NEG, F_NEG, D_NEG,
    I_SHL, L_SHL, I_SHR, L_SHR, I_U_SHR, L_U_SHR,
    I_AND, L_AND,
    I_OR, L_OR,
    I_XOR, L_XOR,
    I_INC,

    //CONVERSIONS
    I2L, I2F, I2D,
    L2I,
    L2F, L2D,
    F2I, F2L,
    F2D,
    D2I, D2L, D2F,
    I2B, I2C, I2S,

    //COMPARISONS
    L_CMP, F_CMP_L, F_CMP_G, D_CMP_L, D_CMP_G,
    IF_EQ, IF_NE, IF_LT, IF_GE, IF_GT, IF_LE,
    IF_I_CMP_EQ, IF_I_CMP_NE, IF_I_CMP_LT, IF_I_CMP_GE, IF_I_CMP_GT, IF_I_CMP_LE,
    IF_A_CMP_EQ, IF_A_CMP_NE,

    //CONTROL
    GOTO, JSR, RET,
    TABLE_SWITCH, LOOKUP_SWITCH,
    I_RETURN, L_RETURN, F_RETURN, D_RETURN, A_RETURN, V_RETURN,

    //REFERENCE
    GET_STATIC, PUT_STATIC, GET_FIELD, PUT_FIELD,
    INVOKE_VIRTUAL, INVOKE_SPECIAL, INVOKE_STATIC, INVOKE_INTERFACE, INVOKE_DYNAMIC,
    NEW, NEW_ARRAY, A_NEW_ARRAY, ARRAY_LENGTH, A_THROW, CHECK_CAST ,INSTANCE_OF,
    MONITOR_ENTER, MONITOR_EXIT,

    //EXTENDED
    WIDE,
    MULTI_A_NEW_ARRAY,
    IF_NULL, IF_NON_NULL,
    GOTO_W, JSR_W,
//    RET_W,
};

}

#endif //TINYJ_INSTRUCTION_H
